{"id":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","dependencies":[{"name":"/home/spinalcom/Documents/spinal/maintainer/spinal-browser-maintainer/package.json","includedInParent":true,"mtime":1558959951467},{"name":"/home/spinalcom/Documents/spinal/maintainer/spinal-browser-maintainer/node_modules/spinal-env-viewer-context-menu-service/package.json","includedInParent":true,"mtime":1558948240087}],"generated":{"js":"/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n *  Interface like class to define a Contextual Application button\n * @see https://material.io/tools/icons/?style=baseline for material icons\n *\n * @class SpinalContextApp\n * @property {string} label=notset short name to be shown in the application\n * @property {string} description description of what the Application button do\n * @property {object} buttonCfg Object configuration of the Application button\n * @property {string} buttonCfg.icon=tab can be a font-awsome or material icon string\n * @property {string} buttonCfg.icon_type=in Where to place the icon in the `md-icon`. Should be one of theses `class`, `in`, `src`\n * @property {string} buttonCfg.backgroundColor=#0000FF backgroud color of the button\n * @property {string} buttonCfg.fontColor=#FFFFFF font color of the button\n * @property {objet} [badgeCfg] Object configuration of the Application button badge\n * @property {string} badgeCfg.label string shown in a badge; if empty it's not shown\n * @property {string} badgeCfg.backgroundColor=#FF0000 backgroud color of the badge\n * @property {string} badgeCfg.fontColor=#FFFFFF font color of the badge\n */\nclass SpinalContextApp {\n  /**\n   * Creates an instance of SpinalContextApp.\n   * @param {string} label=notset short name to be shown in the application\n   * @param {string} description description of what the Application button do\n   * @param {object} buttonCfg Object configuration of the Application button\n   * @param {string} buttonCfg.icon=tab can be a font-awsome or material icon string\n   * @param {string} buttonCfg.icon_type=in Where to place the icon in the `md-icon`. Should be one of theses `class`, `in`, `src`\n   * @param {string} buttonCfg.backgroundColor=#0000FF backgroud color of the button\n   * @param {string} buttonCfg.fontColor=#FFFFFF font color of the button\n   * @param {objet} [badgeCfg] Object configuration of the Application button badge\n   * @param {string} badgeCfg.label string shown in a badge; if empty it's not shown\n   * @param {string} badgeCfg.backgroundColor=#FF0000 backgroud color of the badge\n   * @param {string} badgeCfg.fontColor=#FFFFFF font color of the badge\n   * @memberof SpinalContextApp\n   */\n  constructor(label, description, buttonCfg, badgeCfg = {}) {\n    this.label = label || \"notset\";\n    this.description = description || \"\";\n    this.buttonCfg = {\n      icon: buttonCfg.icon || \"tab\",\n      icon_type: buttonCfg.icon_type || \"in\",\n      backgroundColor: colorHash(buttonCfg.backgroundColor || \"#0000FF\"),\n      fontColor: colorHash(buttonCfg.fontColor || \"#FFFFFF\")\n    };\n\n    this.badgeCfg = {\n      label: badgeCfg.label || \"\",\n      backgroundColor: colorHash(badgeCfg.backgroundColor || \"#FF0000\"),\n      fontColor: colorHash(badgeCfg.fontColor || \"#FFFFFF\")\n    };\n  }\n\n  /**\n   * Method called by `SpinalContextMenuService.getApps`\n   * to filter the Application button to show in the context hook\n   *\n   * @param {object} option\n   * @memberof SpinalContextApp\n   * @returns {Promise} Resolve: not shown if === -1;\n   */\n  isShown(option) {}\n\n  /**\n   * Method to call on click of the application button\n   *\n   * @param {object} option {}\n   * @memberof SpinalContextApp\n   */\n  action(option) {}\n}\n\nmodule.exports = SpinalContextApp;\n\nfunction colorHash(color) {\n  if (color[0] === \"#\") return color;\n  return \"#\" + color;\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}}],"sources":{"../node_modules/spinal-env-viewer-context-menu-service/SpinalContextApp.js":"/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\n/**\n *  Interface like class to define a Contextual Application button\n * @see https://material.io/tools/icons/?style=baseline for material icons\n *\n * @class SpinalContextApp\n * @property {string} label=notset short name to be shown in the application\n * @property {string} description description of what the Application button do\n * @property {object} buttonCfg Object configuration of the Application button\n * @property {string} buttonCfg.icon=tab can be a font-awsome or material icon string\n * @property {string} buttonCfg.icon_type=in Where to place the icon in the `md-icon`. Should be one of theses `class`, `in`, `src`\n * @property {string} buttonCfg.backgroundColor=#0000FF backgroud color of the button\n * @property {string} buttonCfg.fontColor=#FFFFFF font color of the button\n * @property {objet} [badgeCfg] Object configuration of the Application button badge\n * @property {string} badgeCfg.label string shown in a badge; if empty it's not shown\n * @property {string} badgeCfg.backgroundColor=#FF0000 backgroud color of the badge\n * @property {string} badgeCfg.fontColor=#FFFFFF font color of the badge\n */\nclass SpinalContextApp {\n  /**\n   * Creates an instance of SpinalContextApp.\n   * @param {string} label=notset short name to be shown in the application\n   * @param {string} description description of what the Application button do\n   * @param {object} buttonCfg Object configuration of the Application button\n   * @param {string} buttonCfg.icon=tab can be a font-awsome or material icon string\n   * @param {string} buttonCfg.icon_type=in Where to place the icon in the `md-icon`. Should be one of theses `class`, `in`, `src`\n   * @param {string} buttonCfg.backgroundColor=#0000FF backgroud color of the button\n   * @param {string} buttonCfg.fontColor=#FFFFFF font color of the button\n   * @param {objet} [badgeCfg] Object configuration of the Application button badge\n   * @param {string} badgeCfg.label string shown in a badge; if empty it's not shown\n   * @param {string} badgeCfg.backgroundColor=#FF0000 backgroud color of the badge\n   * @param {string} badgeCfg.fontColor=#FFFFFF font color of the badge\n   * @memberof SpinalContextApp\n   */\n  constructor(label, description, buttonCfg, badgeCfg = {}) {\n    this.label = label || \"notset\";\n    this.description = description || \"\";\n    this.buttonCfg = {\n      icon: buttonCfg.icon || \"tab\",\n      icon_type: buttonCfg.icon_type || \"in\",\n      backgroundColor: colorHash(buttonCfg.backgroundColor || \"#0000FF\"),\n      fontColor: colorHash(buttonCfg.fontColor || \"#FFFFFF\")\n    };\n\n    this.badgeCfg = {\n      label: badgeCfg.label || \"\",\n      backgroundColor: colorHash(badgeCfg.backgroundColor || \"#FF0000\"),\n      fontColor: colorHash(badgeCfg.fontColor || \"#FFFFFF\")\n    };\n  }\n\n  /**\n   * Method called by `SpinalContextMenuService.getApps`\n   * to filter the Application button to show in the context hook\n   *\n   * @param {object} option\n   * @memberof SpinalContextApp\n   * @returns {Promise} Resolve: not shown if === -1;\n   */\n  isShown(option) {}\n\n  /**\n   * Method to call on click of the application button\n   *\n   * @param {object} option {}\n   * @memberof SpinalContextApp\n   */\n  action(option) {}\n}\n\nmodule.exports = SpinalContextApp;\n\nfunction colorHash(color) {\n  if (color[0] === \"#\") return color;\n  return \"#\" + color;\n}\n"},"lineCount":100}},"error":null,"hash":"1c3ab50a0ceac6a720e1faf437be1644","cacheData":{"env":{}}}